{"version":3,"sources":["webpack:///webpack/bootstrap ddfaf2bf5ba147dd35f3","webpack:///./lib/catchthefruit.js","webpack:///./lib/basket.js","webpack:///./lib/fruit.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAC;;;;;;;ACrBD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AC7BA;;AAEA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ddfaf2bf5ba147dd35f3\n **/","const Basket = require('./basket');\nconst Fruits = require('./fruit');\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"canvas\");\n  const ctx = canvasEl.getContext(\"2d\");\n\n  let basket;\n  let fruits;\n  // const game = new Game();\n  // new GameView(game, ctx).start();\n\n  const newGame = () => {\n    // debugger\n    basket = new Basket(30, 30, \"blue\", 10, 120);\n    basket.draw(ctx);\n    ctx.fillStyle = \"blue\";\n    ctx.fillRect(30,30,10,120);\n    fruits = new Fruits();\n  };\n\n  newGame();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/catchthefruit.js\n ** module id = 0\n ** module chunks = 0\n **/","class Basket {\n  constructor(x, y, width, color ,height){\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n    this.color = color;\n\n\n  }\n\n  create(){\n  }\n\n  draw(ctx){\n    // debugger\n    ctx.fillStyle = this.color;\n    ctx.fillRect(this.x, this.y, this.width, this.height);\n  }\n\n  update(movement){\n    this.x += movement;\n  }\n\n  clear(ctx, width, height){\n    ctx.clearRect(0, 0, width, height);\n  }\n}\n\nmodule.exports = Basket;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/basket.js\n ** module id = 1\n ** module chunks = 0\n **/","class Fruit {\n\n}\n\nmodule.exports = Fruit;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/fruit.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}